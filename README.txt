--База данных ресторана--
Выполнил
Студент 2 группы SQL
Корсаков Леонид Алексеевич

Содержание:
#Принцип работы
##Безопасность
###Недостатки
####Нереализованные возможности
#####Построковое описание работы бд
######Развёртывание бд
#######Команды

#Принцип работы
База данных (далее бд) устроена так, что необходимые сведения для работы с ней выводятся в консоль вывода,
так что перед началом и в процессе работы, убедитесь что она у вас открыта.
При создании нового заказа бд автоматически открывает счёт для данного заказа, если посетитель решит уйти,
то заказ можно отменить и записи удалятся. После создания заказа нужно добавить блюдо и бд автоматически включит 
стоимость блюда в счёт данного заказа. После того как посетитель решит уйти можно спросить у него наличие скидочной карты,
если она есть то можно ввести её номер и бд автоматически пересчитает стоимость заказа в соответствии со скидкой
которая доступна по этой карте. Далее необходимо закрыть счёт для возможности оплаты заказа 
(без этого оплата не возможна). После закрытия счёта заказ может быть оплачен.

ВАЖНО!!!
Номер заказа, по которому можно проводить все операции посредством функций показывается в консоли вывода при создании заказа. 
Внесение блюд в состав заказа производится через id блюда - это сделано для краткости записи. Минусом данного решения является
неудобство чтения.

##Безопасность
-Нельзя добавить блюдо в заказ если его нет в меню
-Нельзя оплатить заказ если недостаточно средств
-Нельзя оплатить заказ повторно
-Нельзя внести скидку по карте которая не существует
-Нельзя внести скидку повторно
-Нельзя внести скидку после закрытия счёта

###Недостатки
-Повторное закрытие счёта приводит к внесению сообщения в журнал ошибок
-Если в конце заказа ввести скидочную карту, и после этого ещё добавлять блюда в заказ,
то стоимость этих блюд будет вноситься в счёт без скидки. (Исправлено).

####Нереализованные возможности
-Так как есть возможность оплатить большую сумму чем указано в заказе, её можно ограничить
и внести остаток в чаевые официанту (Как предложение оставить чаевые).
-Отслеживать кто из официантов может принять заказ отследив табель за сегодняшний день,
тот работник кто не отметился не сможет принять заказ.

#####Построковое описание работы
Строки 1 - 3 : верхнее управление
Строки 5 - 528 : создание процедур, функций, заполнение бд стартовыми данными (меню, табель, персонал)
Строки 530 - 700 : Создание таблиц с внесением данных
Строки 702 - 831 : Создание процедур по заполнению заказов за 7 дней
Строки 833 - 992 : Создание триггерных функций
Строки 995 - 1021 : Создание триггеров
Строки 1023 - 1118 : Создание представлений
Строки 1120 - 1124 : Создание индексов
Строки 1126 - 1129 : Вызовы процедур
Строки 1133 - 1135 : Нижнее управление
Строки 1137 - Конец файла : Пример вызовов функций для запросов в таблицу

######Развёртывание бд
Для начала работы создайте схему (строка - 2), далее желательно выбрать её по умолчанию(актуально при наличии других схем).
Следующим шагом нужно инициализировать базу данных, для этого создайте процедуру initialization (строка - 5).
Далее нужно вызвать её в строке - 3, так же есть возможность вызова внизу скрипта (строка - 1135).

#######Команды:

Данная команда добавит блюдо в таблицу "Блюда меню"
*call addDish ('Группа меню' varchar, 'Название блюда' varchar, {'Состав/описание' text| null}, вес int, цена decimal)

Данная команда добавит напиток в таблицу "Блюда меню"
*call addDrink ('Вид напитка' varchar, 'Название напитка' varchar, {'Состав/описание' text| null}, объем(мл) int, цена decimal);

Данная команда создаст заказ в таблице заказов с присвоением номера по которому можно добавить в заказ блюда (показан в выводе)
*call createOrder(номер стола int, официант(фамилия) varchar);

Данная команда отменит заказ и удалит его из таблицы Заказы
*call cancelOrder(номер заказа int);

Данная команда добавит блюдо в заказ
*call addDishInOrder(номер заказа int, номер блюда int, количество int);

Данная команда закроет счёт и возможность добавлять скидку в счёт
*call getOrderInvoice(номер заказа int);

Данная команда оплатит заказ
*call pay(номер заказа int, сумма decimal);